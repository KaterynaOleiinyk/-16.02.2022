<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Верстка</title>
</head>
<body>
    <h1 style="font-size: 40px;">10 ознак того, що ви гарний веб-розробник</h1>
    <p style="color: gray; font-size: 35; "> <ins>11 серпня 2016 11:56 OlegWock 8203 5</ins></p>
    <p>Ось ви знаєте як зробити той чи інший сайт, але чи заслуговуєте ви звання класного веб-розробника? Ось 10 ознак гарного веб розробника. Сподіваюсь, у вас буде 10/10.</p>
    <ol><li><h2>Ви використовуєте фреймворк</h2></li>
    <p style="color: darkgray;">Навіть якщо ви супер-зірка розробки — фреймворк необхідна річ. Він представляє купу корисних бібліотек і нав'язує гарні практики замість того, щоб ви винаходили свої велосипеди. А як приємний бонус, ви отримуєте шаблонізацію, красиві URL, управління сесіями, зручний інтерфейс роботи з БД (ORM) та багато іншого. Використання фреймворка зменшує кількість написаного коду та ризик отримати дірку в безпеці вашого сайту. Тому ви однозначно повинні використовувати хоч один. Тут можна знайти дуже великий список.</p>
    <li><h2>Ви використовуєте систему контролю версій</h2></li>
    <p>СКВ дозволяє відслідковувати кожну зміну в вашому коді, порівнювати різні його версії, організовувати відокремлену роботу над різними версіями.<strong>Git</strong> — найпопулярніша на сьогодні СКВ. Перетворити папку проекту в репозитарій можна всього однією командою. Досвідчені розробники використовують багато команд гіту, що розкривають його весь потенціал. Але якщо ви не знаєте команд, не біда — багато IDE мають візуальний інтерфейс для роботи з СКВ. На <i>Codeguida</i> є корисне керівництво по Git.</p>
    <li><h2>Ви повторно використовуєте код</h2></li>
    <p style="color: darkgray;">Бажання писати власні велосипеди та синдром неприйняття чужої розробки часто доставляють проблем. Ви можете цілий день провести за написанням коду і відчувати себе дуже продуктивним. А потім витратити півхвилини на пошук в Google і знайти бібліотеку, що робить те ж саме. Гарні розробники використовують пакети для своєї мови програмування. Кожна мова програмування має власні онлайн-репозитарії пакетів. Для <strong>PHP<strong> — <i>Packagist</i>, для <strong>Node<strong> — <i>NPM</i>, для <strong>Ruby<strong> — <i>Gems</i>, <strong>Python<strong> — <i>PyP</i> та <strong>інші<strong>.</p>
    <li><h2>Ви пишете тести</h2></li>
    <p style="color: black;">Не можна довіряти своєму коду. Якийсь баг там гарантовано буде, не дивлячись на те, що все працює. Особливо, якщо ваш додаток взаємодіє з користувачем. І тому ви повинні писати тести для свого коду. Це покращує якість тестування і не займає так багато часу. Автоматичне тестування буває різним. Ваш фреймворк, скоріше за все, має вбудований функціонал для тестування, тому є сенс почитати документацію. Також слід поглянути в сторону selenium, що дозволяє писати тести, що імітують справжнього користувача. </p>
    <li><h2>Ви турбуєтесь про безпеку</h2></li>
    <p style="color: darkgrey;"><i>CSRF, SQL-ін'єкції, XSS, MITM</i> атаки це лише невеличка частина вразливостей, що можна знайти на веб-сайтах. Зазвичай, деякий захист від них вже вбудовано в ваш веб-фреймворк, але ви особисто повинні знайти що це таке і як його уникнути.</p>
    <li><h2>Ви документуєте свій код</h2></li>
    <p style="color: black;">Досвідчені розробники знають, що код пишуть один раз, а читають — багато. І тому його потрібно писати зрозумілим, в чому і допомагає документація. Багато мов притримуються одного принципу написання коментарів-документації: коментар знаходиться перед класом, методом чи функцією та описує що вона робить, які аргументи приймає та що повертає. Дотримання єдиного стандарту робить можливим динамічне використання документації в <i>IDE</i> або створення на її базі повноцінних доків в HTMl.</p>
    <p style="color: black;">Також гарним тоном вважають опис архітектури та технічних рішень вашого сайту в окремому документі або wiki. Це дозволяє новим розробникам швидко орієнтуватися в проекті.</p>
    <li><h2>Ви можете налаштувати веб-сервер з нуля</h2></li>
    <p style="color: darkgrey;">Базові навички адміністрування потрібні всім веб-розробникам. Адже після написання сайту він працює на спеціально налаштованому сервері, і знання того, як він працює допомагає швидше виправляти помилки і економити на хостингу. Ось корисні гайди по системному адмініструванню.</p>
    <li><h2>Ви слідкуєте за новими інструментами та бібліотеками</h2></li>
    <p style="color: black;">Веб-розробка дуже динамічна частина індустрії розробки. Кожен рік виходить велика кількість нових інструментів. Тому досвідчений розробник повинен слідкувати за новинками і відбирати серед цієї купи корисні інструменти, що мають активну спільноту та гарну документацію.</p>
    <li><h2>Ви ефективно керуєте своїм часом</h2></li>
    <p style="color: darkgray; ">
        Всім нам знайомо коли ви декілька годин сидите перед монітором і робите все, крім потрібного. Так от, гарні розробники так не роблять. Вони знають ціну свого часу і планують день, тиждень, місяць так, щоб якомога ефективніше справлятися зі своїми задачами. Вони починають з дрібниць і в запалі переходять на задачі складніше, вони знають де працюють краще: дома, в офісі чи в кав'ярні. Тут можна почитати про управління часом.
    </p>
    <li><h2>Ви бережете своє здоров'я</h2></li>
    <p style="color: black;">Ми проводимо в сидячому положенні близко восьми годин в день, а то й більше. І тому знання того, як залишатися здоровим дуже важливе. Потрібно знати як запобігти болям в спині, проблем з зором, зайвою вагою і тд. Це не важко, слід лише час від часу виконувати фізичні вправи та дотримуватися правил користування електронною технікою.</p>
    <p style="color: gray; font-style: 35px; ;"><strong>А скільки пунктів у вас? Пишіть в коментарі</strong></p>
    <p style="color: red ; font-size: 15px ; align-items: center;"> <strong>Источник:</strong> <i><a href="http://codeguida.com/post/492/">http://codeguida.com/post/492/</a></i></p>
